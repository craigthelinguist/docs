p ::= e
	| de

de ::= e
	|  d NEWLINE de

d ::= "class" ID INDENT objd DEDENT
    | "type" ID INDENT typd DEDENT
    | val
    | def
    | "var" ID TYPEASC "=" e
    | "var" ID TYPEASC "=" INDENT e DEDENT

val ::= "val" ID TYPEASC "=" e
    |   "val" ID "=" e
    |   "val" ID TYPEASC "=" INDENT e DEDENT
    |   "val" ID "=" INDENT e DEDENT

def ::= "def" ID "(" params ")" TYPEASC "=" e
    |   "def" ID "(" params ")" TYPEASC INDENT p DEDENT

tdef ::= "def" ID "(" params ")" TYPEASC

params ::= ID TYPEASC | params "," ID TYPEASC | epsilon

metadata ::= "metadata" "=" e

objd ::= epsilon | objid objd

objid ::=val
	|    def
	|    "class" ID INDENT objd DEDENT 
	|    "type" ID INDENT typd DEDENT

typd ::= epsilon | typeid typd
typeid ::=val
	| 	  tdef
	|	  metadata

//Example, add extensible operators?
e ::= mul | mul "+" e | mul "-" e
mul ::= term | term "*" mul | term "/" mul

term ::= ID
	| "fn" ID TYPEASC "=>" e
	| e tuple
	| tuple
	| e "." ID
	| TYPE "." ID
	| e TYPEASC
	| "valAST" "(" e ")"
	| TYPE "." "metadata"
	| inlinelit

tuple ::= "(" it ")"
it ::= e | it "," e | epsilon