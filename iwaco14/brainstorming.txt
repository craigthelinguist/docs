Brainstorms from IWACO
 - Cyrus: permissions to people: if a programmer doesn't have the permission to access the network, he can't use the networking libraries
   - only some people are trusted to use an API (or to make a decision to use it)
architect could hand out resources not just to code, but to people as well
   
is import resource network the same as import resource SSLSOAPConnector?
Fig 2 - connect not bold
	lesskeywords={connect}

X TSL for argument to run
X lots of metaprogramming - but written by experts
X import keyword architecture.... rather than language ADL
X Fig. 2 - Java style type annotations
X use "out" "in" for client and server
X we don't know wyvern.org, so maybe don't use the packages
	wyvern.X
X fully functorized - but matters most for resources
X say def package defines a package, package uses it
	distinction important because of resources

role of architect is to hand out resources
	resources could be many different things
	
highlight resource management more

DISCUSSION: something like threads is questionable
	maybe architects should decide if threads are a resource?
	makes errors more likely
	but if fully internal, not exposed to the outside
