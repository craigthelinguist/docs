New bound extension:

G |- sig_l <<: tau -| Th     Th |- tau :<< sig_t -| Th'     Th' |-> Del
-----------------------------------------------------------------------
                 G, sig_l <: ^a <: sig_t |-> Del, ^a = tau


Lem 1: sigbndl -> siginstl:
	G |- tau <<: sig_t -| Del
	/\ G |-> Om
	/\ [Om]^a = tau
	=> G |- ^a <:=bar sig_t -| Del'
	/\ Del' |-> Om

Lem 2: sigbndr -> siginstr:
	G |- sig_b :<< tau -| Del
	/\ G |-> Om
	/\ [Om]^a = tau
	=> G |- sig_b <=:bar ^a -| Del'
	/\ Del' |-> Om

Lem 3: Simp
	G |- ^a <:= tau -| Del => Del |- ^a <:= tau -| Del

Lem 4:
	G[s_l <: ^a <: s_t] |-> Om /\ [Om]^a = tau 
=>	G |- sig_l <<: tau -| Th
/\  Th|- tau :<< sig_t -| Del
/\  Del |-> Om
/\  Th  |-> Om

Lem 5:
	G |- sig :<< A -| Th
/\	G |-> Om
/\	[Om]A = B
=>	G |- sig :<< B -| Th

Lem 6:
	G |- sig :<< A -| Th
/\	G |-> Om
/\	[Om]A = B
=>	G |- sig :<< B -| Th

Lem 7:
	G |- <_,tau> :<< A -| Th
=>	Th' |- tau <: A -| Th

Lem 7b:
	G |- <_,tau> <<: sig -| Th
=>	Th' |- tau <: sig -| Th


Lem 8:
	G |- tau <<: s_t -| Th
/\	G |- tau' <= tau
=>	G |- tau' <<: s_t -| Th'

Lem 9:
	G |- ^a <:=bar s_t -| Th
=>	G,Th' |- ^a <:=bar s_t -| Th,Th'

Lem 10:
	G_u;s_l<:^a<:s_u;G_l |-> Om_u;^a = tau;Om_l 
=>  G_l |-> Om_l
/\  G_u |- s_l :<< tau -| Th
/\  G_u |- tau <<: s_u -| Th'
/\  Th |-> Om_u
/\  Th' |-> Om_u

Lem 11:
    G_l |-> Om_l
/\  G_u |- s_l :<< tau -| Th
/\  G_u |- tau <<: s_u -| Th'
/\  Th |-> Om_u
/\  Th' |-> Om_u
=>  G_u;s_l<:^a<:s_u;G_l |-> Om_u;^a = tau;Om_l

Lem 12:
	Th |- tau <<: <rho,tau'> -| Th'
/\  Th |- tau <<: <rho,top>  -| Th''
/\	Th'' |- tau <: tau'' -| Th'''
=>	Th |- tau <<: <rho,tau''> -| Th'''

Lem 13:
	Th |- tau <<: <rho,tau'> -| Th'
/\	Th |- tau <<: <rho,top>  -| Th''
=>  Th'' |- tau <: tau' -| Th'

Lem 14:
	Th |- tau <<: <rho,tau'> -| Th''
/\	Th'' |- tau <: tau' -| Th''
=>  Th |- tau <<: <rho,top> -| Th''

Lem 15:
	Th |- tau \/ tau' = tau'' -| Th'
=>	Th |- rho;tau \/ tau' = <rho,tau''> -| Th'

Lem 16:
	Th |- rho;top \/ tau = <rho,tau> -| tau

Lem 17:
	Th   |- tau <<: <rho,top> -| Th'
=>	Th'' |- tau <<: top -| Th'

Lem 18:
	G |-> Om
/\	Th |-> Om
/\	[Om]G |- tau <= tau'
=>	[Om]Th |- [Om]tau <= [Om]tau'

Lem 19:
	G |- <rho,tau'> :<< tau -| Del
=>	G |- <rho,bot> :<< tau -| Th
/\	Th|- tau' <: tau -| Del

Lem 20:
	G |- <rho,bot> :<< tau -| Del
/\	Del |- ^a <:= tau -| Del'
=>	G |- <{rho, ^a}, bot> -| Del'

Lem 21:
	G |-> Om
/\	Th |-> Om
/\	Vars(G) = Vars(Th)
/\	G |- sig :<< tau -| Th'
=>	Th|- sig :<< tau -| Th''
/\	Th'' |-> Om

x in Vars(G) <=> exist G',G'' : G = G';x;G''

Lem 22:
	G |- ^a <:= tau -| Th
=>	Vars(G) = Vars(Th)

Lem 23:
	G |- s_l :<< tau -| Th
/\	[Om]G |- tau <= tau'
=>	G |- s_l :<< tau' -| Th'

Lem 24:
	G |- ^a <=:bar s_t -| Th
=>	G,Th' |- ^a <=:bar s_t -| Th,Th'
