Experiences with Scala for Introductory CS - Mark Lewis [Scala Workshop]
========================================================================

What makes Python (and Scala) good for programming in the small (teaching CS1)
 - REPL
 - scripting
 - few keywords
 - uniform syntax (at levels A1 and A)
 - easy standard input

Conclusion: Scala is better than C, Java, C++; it works better in the small
	Scheme is nice in the small, but didn't want something so functional
	Not significantly worse than Python; easier access to Java

Benefits to CS2
	like static type checking
	and topics depend on it: type parameters, subtyping, ...

Benefits of Scala, in more detail (esp. vs. Java)
=================================================
REPL dramatically improves early classes
	nice that the Scala REPL shows the types
Scripting reduces boilerplate (vs. "static" in Java)
No primitives, thus no special cases
	Uniform syntax for types - all capital letters
Import is required in Scala 2.11 to use "readInt" directly
	this is a downside, but input simpler than Java overall
Declarations start with a keyword that tells you what you are declaring
	Variables require initialization - avoids null pointer exceptions
Uniform syntax for many types of collections; can teach even before loops
	val arr = Array(1, 2, 3)               int[] arr = {1,2,3}
	val lst = List(1,2,3)                  List<Integer> lst = new LinkedList...
	val minors = people.filter(_.age<18)   // tricky in Java depends on coll
	// only downside: harder to understand the low level of what is going on
Files and Strings are collections
Case classes allow the equivalent of structs
	simpler than Java, plus Scala case classes provide the copy method
Simpler GUI code: paint program is 20 lines long
	don't have to introduce inheritance for students to use GUIs
	note: Oracle is moving from Swing to JavaFX; what will this affect?
Parallelism early - simpler streams even than Java 8
	actors and futures approachable in CS2
Reduced boilerplate in general
	may not matter for professionals
		it's only typing, and that's not the limiting factor
	matters for students
		magical incantation, and a chance to screw up
		every error causes frustration
Doesn't allow "sloppy" habits that Python allows
	e.g. using a variable w/o declaring it

Flaws with using Scala to teach Intro CS
========================================
Console input - what you type doesn't show up in the REPL
Two APIs: the Scala ones and the Java ones
	silver lining: they learn some Java
Need more examples in API and tutorials
Implicits: don't teach, but....
	hard to find things in the API when implicit conversions are involved
Flexibility can be a problem
	if a method doesn't take arguments, do you need parens?
		always OK, required in rare cases; but hard to explain
Object vs. object


References
==========
Mark has written a textbook
