///////////// LEXER INTERFACE //////////////

12345678901234567890123456789012345678901234567890123456789012345678901234567890

type LexStream
	// a special EOF token denotes the end of stream
	
	method next():Token	// returns the current token and advances the stream
	method peek():Token	// returns the current token; does not advance
	
	/** looks ahead n tokens.  peek() == lookAhead(0) */
	method lookAhead(n:int):Token
	
	/** Returns a LexStream for parsing an indented block.
	 * The intent is to call this immediately after next() returns an INDENT.
	 * The returned LexStream will yield all tokens up to (but not including)
	 * the next DEDENT that does not match an INDENT.
	 * It will yield an EOF instead of the final DEDENT.
	 * The current LexStream will yield the DEDENT next.
	 */
	method indentStream():LexStream
	
	/** Returns a character Stream to get the character-by-character input of
	 * this LexStream.  If this LexStream was an indentStream() of another
	 * LexStream, the leading indents will be removed from the RawStream.
	 * 
	 * TO BE IMPLEMENTED IN THE FUTURE
	 */
	method asRawStream():RawInputStream
	
